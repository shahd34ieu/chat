# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16lOvcmW-JivKaF1OeLkWufGPzu_xNF7A
"""

!pip install streamlit transformers langchain requests beautifulsoup4

import streamlit as st
from transformers import pipeline
import requests
from bs4 import BeautifulSoup

# تحميل نموذج متعدد اللغات (عربي + إنجليزي)
qa_model = pipeline("question-answering",
                    model="microsoft/mdeberta-v3-base",
                    tokenizer="microsoft/mdeberta-v3-base",
                    use_auth_token="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")

# استخراج محتوى من Drugs.com
def search_drugs_dot_com(query):
    url = f"https://www.drugs.com/search.php?searchterm={query}"
    headers = {"User-Agent": "Mozilla/5.0"}
    response = requests.get(url, headers=headers)
    soup = BeautifulSoup(response.content, "html.parser")
    results = soup.find_all("a", class_="ddc-media-title", limit=1)

    if results:
        drug_link = "https://www.drugs.com" + results[0]["href"]
        drug_page = requests.get(drug_link, headers=headers)
        drug_soup = BeautifulSoup(drug_page.content, "html.parser")
        paragraphs = drug_soup.find_all("p")
        context = " ".join(p.get_text() for p in paragraphs)
        return context
    return "لم يتم العثور على معلومات في Drugs.com."

# سؤال وإجابة باستخدام النموذج
def answer_question(question, context):
    result = qa_model(question=question, context=context)
    return result["answer"]

# واجهة Streamlit
def main():
    st.set_page_config(page_title="شات بوت طبي", layout="centered")
    st.title("💊 شات بوت للإجابة عن الأسئلة الطبية (عربي + إنجليزي)")

    question = st.text_input("اكتب سؤالك الطبي (مثلاً: ما هي استخدامات الباراسيتامول؟)")

    if question:
        with st.spinner("جاري البحث والإجابة..."):
            context = search_drugs_dot_com(question)
            if context.startswith("لم يتم"):
                st.warning(context)
            else:
                answer = answer_question(question, context)
                st.markdown(f"**الإجابة:** {answer}")

if __name__ == "__main__":
    main()